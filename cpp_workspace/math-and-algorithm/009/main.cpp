#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

const string YES = "Yes";
const string NO = "No";

template<class T> inline bool chmax(T& a, T b) {
    if(a < b) {
        a = b;
        return true;
    }
    return false;
}

void solve(long long N, long long S, std::vector<long long> A){
    // Init dp table
    long long dp[61][10001] = {0};
    for(int i = 1; i <= N; i++) {
        // Calc dp[i][max_s] by used dp[i-1][]
        for(int max_s = 1; max_s <= S; max_s++) {
            // Case1:select A[i-1]
            if(max_s - A[i-1] >= 0) {
                chmax(dp[i][max_s], dp[i-1][max_s - A[i-1]] + A[i-1]);
            }
            // Case2:no select A[i-1]
            chmax(dp[i][max_s], dp[i-1][max_s]);
        }
    }
    if(dp[N][S] == S) {
        cout << YES << endl;
    } else {
        cout << NO << endl;
    }
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    long long S;
    std::scanf("%lld", &S);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, S, std::move(A));
    return 0;
}

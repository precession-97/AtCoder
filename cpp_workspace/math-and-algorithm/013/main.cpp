#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N){
    vector<long long> divisorArray;
    for(long long n = 1; n * n <= N; n++) {
        if(N % n == 0) {
            divisorArray.push_back(n);
            if(N/n != n) {
                divisorArray.push_back(N/n);
            }
        }
    }
    sort(divisorArray.begin(), divisorArray.end());
    for(long long divisor : divisorArray) {
        cout << divisor << endl;
    }
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    solve(N);
    return 0;
}

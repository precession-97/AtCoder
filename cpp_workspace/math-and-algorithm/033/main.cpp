#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
using namespace std;


void solve(long long a_x, long long a_y, long long b_x, long long b_y, long long c_x, long long c_y){

    // vector BA
    long long baX = a_x - b_x;
    long long baY = a_y - b_y;
    // vector BC
    long long bcX = c_x - b_x;
    long long bcY = c_y - b_y;
    // vector CA
    long long caX = a_x - c_x;
    long long caY = a_y - c_y;
    // vector CB
    long long cbX = b_x - c_x;
    long long cbY = b_y - c_y;

    // inner-product
    long long ipBaBc = (baX * bcX) + (baY * bcY);
    long long ipCaCb = (caX * cbX) + (caY * cbY);
    double ans;
    if (ipBaBc < 0) {

        ans = sqrt((baX * baX) + (baY * baY));

    } else if (ipCaCb < 0) {

        ans = sqrt((caX * caX) + (caY * caY));

    } else {

        // outer-product
        long long opBaBc = (baX * bcY) - (baY * bcX);
        ans = (double) abs(opBaBc) / sqrt((bcX * bcX) + (bcY * bcY));

    }

    cout << fixed << setprecision(7) << ans << endl;

}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long a_x;
    std::scanf("%lld", &a_x);
    long long a_y;
    std::scanf("%lld", &a_y);
    long long b_x;
    std::scanf("%lld", &b_x);
    long long b_y;
    std::scanf("%lld", &b_y);
    long long c_x;
    std::scanf("%lld", &c_x);
    long long c_y;
    std::scanf("%lld", &c_y);
    solve(a_x, a_y, b_x, b_y, c_x, c_y);
    return 0;
}

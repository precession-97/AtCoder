#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, std::vector<long long> A){
    set<long long> st;
    const long long SUM = 100000;
    vector<long long> vec(SUM, 0);
    for(long long a : A) {
        st.insert(a);
        vec[a]++;
    }
    
    long long ans = 0;
    for(long long e : st) {
        if( e >  (SUM/2)) break;
        if( e == (SUM/2)) ans += vec[e] * (vec[e]-1) / 2;
        else ans += vec[e] * vec[SUM - e];
    }
    cout << ans << endl;

}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}

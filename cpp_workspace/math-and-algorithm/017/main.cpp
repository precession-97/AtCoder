#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

long long calcGCD(long long x, long long y) {
    while(x >= 1 && y >= 1) {
        if(x > y) x = x % y;
        else y = y % x;
    }
    if(x != 0) return x;
    return y;
}

long long calcLCM(long long x, long long y) {
    return x / calcGCD(x, y) * y ;
}


void solve(long long N, std::vector<long long> A){
    long long lcm = A[0];
    for(int i = 1; i < N; i++) {
        lcm = calcLCM(lcm, A[i]);
    }
    cout << lcm << endl;
}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}

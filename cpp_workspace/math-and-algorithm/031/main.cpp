#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

void solve(long long N, std::vector<long long> A){

    // initialize dp
    vector<long long> dp(N+1, -(1LL << 60));

    // initial condition
    dp[1] = A[1];
    dp[2] = A[2];

    // update dp-table
    for(int n = 3; n <= N; n++) {
        dp[n] = max(dp[n-2] + A[n], dp[n-1]);
    }

    cout << dp[N] << endl;

}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N+1);
    for(int i = 1 ; i <= N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}

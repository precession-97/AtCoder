#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, std::vector<long long> A){

    long long cnt100 = 0;
    long long cnt200 = 0;
    long long cnt300 = 0;
    long long cnt400 = 0;

    for(long long a : A) {
        switch (a)
        {
        case 100:
            cnt100++;
            break;
        case 200:
            cnt200++;
            break;
        case 300:
            cnt300++;
            break;
        case 400:
            cnt400++;
            break;
        default:
            break;
        }
    }

    cout << (cnt100 * cnt400) + (cnt200 * cnt300) << endl;

}

// Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, std::move(A));
    return 0;
}
